package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:defs.bzl", "node_modules_filegroup")

exports_files([
    "tsconfig.json",
    "LICENSE",
    "protractor-perf.conf.js",
])

filegroup(
    name = "web_test_bootstrap_scripts",
    # do not sort
    srcs = [
        "@ngdeps//node_modules/reflect-metadata:Reflect.js",
        "@ngdeps//node_modules/zone.js:dist/zone.js",
        "@ngdeps//node_modules/zone.js:dist/zone-testing.js",
        "@ngdeps//node_modules/zone.js:dist/task-tracking.js",
        "//:test-events.js",
    ],
)

filegroup(
    name = "angularjs_scripts",
    srcs = [
        "@ngdeps//node_modules/angular:angular.js",
        "@ngdeps//node_modules/angular-1.5:angular.js",
        "@ngdeps//node_modules/angular-1.6:angular.js",
        "@ngdeps//node_modules/angular-mocks:angular-mocks.js",
        "@ngdeps//node_modules/angular-mocks-1.5:angular-mocks.js",
        "@ngdeps//node_modules/angular-mocks-1.6:angular-mocks.js",
    ],
)

load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")

# A nodejs_binary for @angular/bazel/ngc-wrapped to use by default in
# ng_module that depends on @npm//@angular/bazel instead of the
# output of the //packages/bazel/src/ngc-wrapped ts_library rule. This
# default is for downstream users that depend on the @angular/bazel npm
# package. The generated @npm//@angular/bazel/ngc-wrapped target
# does not work because it does not have the node `--expose-gc` flag
# set which is required to support the call to `global.gc()`.
nodejs_binary(
    name = "@angular/bazel/ngc-wrapped",
    configuration_env_vars = ["compile"],
    data = ["@npm//@angular/bazel"],
    entry_point = "@angular/bazel/src/ngc-wrapped/index.js",
    install_source_map_support = False,
    templated_args = ["--node_options=--expose-gc"],
)
