[
  {
    "name": "ACTIVE_INDEX"
  },
  {
    "name": "ALLOW_MULTIPLE_PLATFORMS"
  },
  {
    "name": "APP_BOOTSTRAP_LISTENER"
  },
  {
    "name": "APP_INITIALIZER"
  },
  {
    "name": "APP_ROOT"
  },
  {
    "name": "AnonymousSubject"
  },
  {
    "name": "ApplicationInitStatus"
  },
  {
    "name": "ApplicationRef"
  },
  {
    "name": "BINDING_INDEX"
  },
  {
    "name": "BLOOM_MASK"
  },
  {
    "name": "BrowserDomAdapter"
  },
  {
    "name": "BrowserGetTestability"
  },
  {
    "name": "BrowserPlatformLocation"
  },
  {
    "name": "CIRCULAR"
  },
  {
    "name": "CIRCULAR$1"
  },
  {
    "name": "CLEANUP"
  },
  {
    "name": "CLEAN_PROMISE"
  },
  {
    "name": "COMPONENT_FACTORY_RESOLVER"
  },
  {
    "name": "CONTAINER_INDEX"
  },
  {
    "name": "CONTEXT"
  },
  {
    "name": "ChangeDetectionStrategy"
  },
  {
    "name": "ComponentFactory"
  },
  {
    "name": "ComponentFactory$1"
  },
  {
    "name": "ComponentFactoryBoundToModule"
  },
  {
    "name": "ComponentFactoryResolver"
  },
  {
    "name": "ComponentFactoryResolver$1"
  },
  {
    "name": "ComponentRef"
  },
  {
    "name": "ComponentRef$1"
  },
  {
    "name": "ConnectableSubscriber"
  },
  {
    "name": "Console"
  },
  {
    "name": "DECLARATION_VIEW"
  },
  {
    "name": "DOCUMENT"
  },
  {
    "name": "DOCUMENT$1"
  },
  {
    "name": "DOM_KEY_LOCATION_NUMPAD"
  },
  {
    "name": "EMPTY"
  },
  {
    "name": "EMPTY$1"
  },
  {
    "name": "EMPTY_ARRAY"
  },
  {
    "name": "EMPTY_ARRAY$1"
  },
  {
    "name": "EMPTY_PAYLOAD"
  },
  {
    "name": "ERROR_COMPONENT"
  },
  {
    "name": "ERROR_DEBUG_CONTEXT"
  },
  {
    "name": "ERROR_LOGGER"
  },
  {
    "name": "ERROR_ORIGINAL_ERROR"
  },
  {
    "name": "ElementRef"
  },
  {
    "name": "EmptyErrorImpl"
  },
  {
    "name": "ErrorHandler"
  },
  {
    "name": "EventEmitter"
  },
  {
    "name": "FLAGS"
  },
  {
    "name": "FactoryPrototype"
  },
  {
    "name": "HEADER_OFFSET"
  },
  {
    "name": "HOST"
  },
  {
    "name": "HOST_NODE"
  },
  {
    "name": "HelloWorldComponent"
  },
  {
    "name": "HelloWorldModule"
  },
  {
    "name": "IDENT"
  },
  {
    "name": "INJECTOR"
  },
  {
    "name": "INJECTOR$1"
  },
  {
    "name": "INJECTOR_SIZE"
  },
  {
    "name": "Inject"
  },
  {
    "name": "InjectionToken"
  },
  {
    "name": "Injector"
  },
  {
    "name": "InnerSubscriber"
  },
  {
    "name": "LifecycleHooksFeature"
  },
  {
    "name": "MONKEY_PATCH_KEY_NAME"
  },
  {
    "name": "MULTI_PROVIDER_FN"
  },
  {
    "name": "MapOperator"
  },
  {
    "name": "MapSubscriber"
  },
  {
    "name": "MergeMapOperator"
  },
  {
    "name": "MergeMapSubscriber"
  },
  {
    "name": "MulticastOperator"
  },
  {
    "name": "NATIVE"
  },
  {
    "name": "NEW_LINE"
  },
  {
    "name": "NEXT"
  },
  {
    "name": "NG_COMPONENT_DEF"
  },
  {
    "name": "NG_DIRECTIVE_DEF"
  },
  {
    "name": "NG_ELEMENT_ID"
  },
  {
    "name": "NG_INJECTABLE_DEF"
  },
  {
    "name": "NG_INJECTOR_DEF"
  },
  {
    "name": "NG_MODULE_DEF"
  },
  {
    "name": "NG_PIPE_DEF"
  },
  {
    "name": "NG_PROJECT_AS_ATTR_NAME"
  },
  {
    "name": "NG_TEMP_TOKEN_PATH"
  },
  {
    "name": "NG_TOKEN_PATH"
  },
  {
    "name": "NOT_FOUND"
  },
  {
    "name": "NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR"
  },
  {
    "name": "NOT_YET"
  },
  {
    "name": "NO_CHANGE"
  },
  {
    "name": "NO_NEW_LINE"
  },
  {
    "name": "NO_PARENT_INJECTOR"
  },
  {
    "name": "NULL_INJECTOR"
  },
  {
    "name": "NULL_INJECTOR$2"
  },
  {
    "name": "NgModuleFactory"
  },
  {
    "name": "NgModuleFactory$1"
  },
  {
    "name": "NgModuleRef"
  },
  {
    "name": "NgModuleRef$1"
  },
  {
    "name": "NgOnChangesFeature"
  },
  {
    "name": "NgZone"
  },
  {
    "name": "NodeInjector"
  },
  {
    "name": "NodeInjectorFactory"
  },
  {
    "name": "NoopNgZone"
  },
  {
    "name": "NullInjector"
  },
  {
    "name": "ObjectUnsubscribedError"
  },
  {
    "name": "ObjectUnsubscribedErrorImpl"
  },
  {
    "name": "Observable"
  },
  {
    "name": "Optional"
  },
  {
    "name": "OuterSubscriber"
  },
  {
    "name": "PARAMETERS"
  },
  {
    "name": "PARENT"
  },
  {
    "name": "PARENT_INJECTOR"
  },
  {
    "name": "PLATFORM_BROWSER_ID"
  },
  {
    "name": "PLATFORM_ID"
  },
  {
    "name": "PLATFORM_INITIALIZER"
  },
  {
    "name": "PRIVATE_PREFIX"
  },
  {
    "name": "PlatformLocation"
  },
  {
    "name": "PlatformRef"
  },
  {
    "name": "QUERIES"
  },
  {
    "name": "R3Injector"
  },
  {
    "name": "RENDERER"
  },
  {
    "name": "RENDER_PARENT"
  },
  {
    "name": "ROOT_CONTEXT"
  },
  {
    "name": "RefCountOperator"
  },
  {
    "name": "RefCountSubscriber"
  },
  {
    "name": "RendererFactory2"
  },
  {
    "name": "RootViewRef"
  },
  {
    "name": "SANITIZER"
  },
  {
    "name": "SCHEDULER"
  },
  {
    "name": "SOURCE"
  },
  {
    "name": "SWITCH_ELEMENT_REF_FACTORY"
  },
  {
    "name": "SWITCH_INJECTOR_FACTORY"
  },
  {
    "name": "SafeSubscriber"
  },
  {
    "name": "Self"
  },
  {
    "name": "SimpleChange"
  },
  {
    "name": "SkipSelf"
  },
  {
    "name": "StaticInjector"
  },
  {
    "name": "Subject"
  },
  {
    "name": "SubjectSubscriber"
  },
  {
    "name": "SubjectSubscription"
  },
  {
    "name": "Subscriber"
  },
  {
    "name": "Subscription"
  },
  {
    "name": "THROW_IF_NOT_FOUND"
  },
  {
    "name": "TNODE"
  },
  {
    "name": "TVIEW"
  },
  {
    "name": "Testability"
  },
  {
    "name": "TestabilityRegistry"
  },
  {
    "name": "USE_VALUE"
  },
  {
    "name": "UnsubscriptionError"
  },
  {
    "name": "UnsubscriptionErrorImpl"
  },
  {
    "name": "VERSION"
  },
  {
    "name": "VIEWS"
  },
  {
    "name": "Version"
  },
  {
    "name": "ViewEncapsulation"
  },
  {
    "name": "WRAP_RENDERER_FACTORY2"
  },
  {
    "name": "_CLEAN_PROMISE"
  },
  {
    "name": "_DOM"
  },
  {
    "name": "_NullComponentFactoryResolver"
  },
  {
    "name": "_THROW_IF_NOT_FOUND"
  },
  {
    "name": "__assign"
  },
  {
    "name": "__extends"
  },
  {
    "name": "__extends$1"
  },
  {
    "name": "__extends$2"
  },
  {
    "name": "__extends$3"
  },
  {
    "name": "__extends$4"
  },
  {
    "name": "__extends$5"
  },
  {
    "name": "__extends$l"
  },
  {
    "name": "__extends$m"
  },
  {
    "name": "__extends$n"
  },
  {
    "name": "__extends$p"
  },
  {
    "name": "__forward_ref__"
  },
  {
    "name": "__read"
  },
  {
    "name": "__self"
  },
  {
    "name": "__spread"
  },
  {
    "name": "__symbol__"
  },
  {
    "name": "__values"
  },
  {
    "name": "__window"
  },
  {
    "name": "_attrToPropMap"
  },
  {
    "name": "_callAndReportToErrorHandler"
  },
  {
    "name": "_chromeNumKeyPadMap"
  },
  {
    "name": "_currentInjector"
  },
  {
    "name": "_currentNamespace"
  },
  {
    "name": "_devMode"
  },
  {
    "name": "_document"
  },
  {
    "name": "_enable_super_gross_mode_that_will_cause_bad_things"
  },
  {
    "name": "_global"
  },
  {
    "name": "_keyMap"
  },
  {
    "name": "_renderCompCount"
  },
  {
    "name": "_testabilityGetter"
  },
  {
    "name": "appendChild"
  },
  {
    "name": "assertPlatform"
  },
  {
    "name": "attachPatchData"
  },
  {
    "name": "baseElement"
  },
  {
    "name": "baseResolveDirective"
  },
  {
    "name": "blackListedEvents"
  },
  {
    "name": "bloomAdd"
  },
  {
    "name": "bloomHasToken"
  },
  {
    "name": "bloomHashBitOrFactory"
  },
  {
    "name": "callHooks"
  },
  {
    "name": "canInsertNativeChildOfElement"
  },
  {
    "name": "canInsertNativeChildOfView"
  },
  {
    "name": "canInsertNativeNode"
  },
  {
    "name": "canReportError"
  },
  {
    "name": "checkNoChanges"
  },
  {
    "name": "checkNoChangesInRootView"
  },
  {
    "name": "checkNoChangesMode"
  },
  {
    "name": "checkStable"
  },
  {
    "name": "cleanUpView"
  },
  {
    "name": "collectNativeNodes"
  },
  {
    "name": "compileNgModuleFactory"
  },
  {
    "name": "compileNgModuleFactory__POST_R3__"
  },
  {
    "name": "componentRefresh"
  },
  {
    "name": "computeDeps"
  },
  {
    "name": "config"
  },
  {
    "name": "connectableObservableDescriptor"
  },
  {
    "name": "connectableProto"
  },
  {
    "name": "couldBeInjectableType"
  },
  {
    "name": "createChainedInjector"
  },
  {
    "name": "createElementRef"
  },
  {
    "name": "createInjector"
  },
  {
    "name": "createLContext"
  },
  {
    "name": "createLViewData"
  },
  {
    "name": "createNodeAtIndex"
  },
  {
    "name": "createPlatform"
  },
  {
    "name": "createPlatformFactory"
  },
  {
    "name": "createRootComponent"
  },
  {
    "name": "createRootComponentView"
  },
  {
    "name": "createRootContext"
  },
  {
    "name": "createScope"
  },
  {
    "name": "createTNode"
  },
  {
    "name": "createTView"
  },
  {
    "name": "createTextNode"
  },
  {
    "name": "createViewBlueprint"
  },
  {
    "name": "createViewNode"
  },
  {
    "name": "createViewQuery"
  },
  {
    "name": "deepForEach"
  },
  {
    "name": "defaultErrorLogger"
  },
  {
    "name": "defaultScheduler"
  },
  {
    "name": "defineComponent"
  },
  {
    "name": "defineInjectable"
  },
  {
    "name": "defineInjector"
  },
  {
    "name": "defineNgModule"
  },
  {
    "name": "destroyLView"
  },
  {
    "name": "destroyViewTree"
  },
  {
    "name": "detectChanges"
  },
  {
    "name": "detectChangesInRootView"
  },
  {
    "name": "detectChangesInternal"
  },
  {
    "name": "detectWTF"
  },
  {
    "name": "diPublicInInjector"
  },
  {
    "name": "domRendererFactory3"
  },
  {
    "name": "elementCreate"
  },
  {
    "name": "empty"
  },
  {
    "name": "enterView"
  },
  {
    "name": "errorObject"
  },
  {
    "name": "executeHooks"
  },
  {
    "name": "executeInitHooks"
  },
  {
    "name": "executeNodeAction"
  },
  {
    "name": "executeOnDestroys"
  },
  {
    "name": "executePipeOnDestroys"
  },
  {
    "name": "extendStatics"
  },
  {
    "name": "extractDirectiveDef"
  },
  {
    "name": "extractPipeDef"
  },
  {
    "name": "findComponentView"
  },
  {
    "name": "findViaComponent"
  },
  {
    "name": "firstTemplatePass"
  },
  {
    "name": "flattenUnsubscriptionErrors"
  },
  {
    "name": "forkInnerZoneWithAngularBehavior"
  },
  {
    "name": "formatError"
  },
  {
    "name": "forwardRef"
  },
  {
    "name": "from"
  },
  {
    "name": "fromArray"
  },
  {
    "name": "fromIterable"
  },
  {
    "name": "fromObservable"
  },
  {
    "name": "fromPromise"
  },
  {
    "name": "generateExpandoInstructionBlock"
  },
  {
    "name": "getBaseElementHref"
  },
  {
    "name": "getBeforeNodeForView"
  },
  {
    "name": "getCheckNoChangesMode"
  },
  {
    "name": "getCleanup"
  },
  {
    "name": "getClosureSafeProperty"
  },
  {
    "name": "getComponentDef"
  },
  {
    "name": "getComponentViewByIndex"
  },
  {
    "name": "getComponentViewByInstance"
  },
  {
    "name": "getContainerRenderParent"
  },
  {
    "name": "getCreationMode"
  },
  {
    "name": "getDOM"
  },
  {
    "name": "getDebugContext"
  },
  {
    "name": "getDirectiveDef"
  },
  {
    "name": "getErrorLogger"
  },
  {
    "name": "getFirstParentNative"
  },
  {
    "name": "getFirstTemplatePass"
  },
  {
    "name": "getHighestElementContainer"
  },
  {
    "name": "getHostNative"
  },
  {
    "name": "getInjectableDef"
  },
  {
    "name": "getInjectorDef"
  },
  {
    "name": "getInjectorIndex"
  },
  {
    "name": "getIsParent"
  },
  {
    "name": "getLContainer"
  },
  {
    "name": "getLViewChild"
  },
  {
    "name": "getNativeByTNode"
  },
  {
    "name": "getNgModuleDef"
  },
  {
    "name": "getNgZone"
  },
  {
    "name": "getNodeInjectable"
  },
  {
    "name": "getNullInjector"
  },
  {
    "name": "getOrCreateInjectable"
  },
  {
    "name": "getOrCreateNodeInjectorForNode"
  },
  {
    "name": "getOrCreateTView"
  },
  {
    "name": "getOriginalError"
  },
  {
    "name": "getParentInjectorIndex"
  },
  {
    "name": "getParentInjectorLocation"
  },
  {
    "name": "getParentInjectorView"
  },
  {
    "name": "getParentInjectorViewOffset"
  },
  {
    "name": "getParentNative"
  },
  {
    "name": "getParentState"
  },
  {
    "name": "getPipeDef"
  },
  {
    "name": "getPlatform"
  },
  {
    "name": "getPreviousOrParentTNode"
  },
  {
    "name": "getPromiseCtor"
  },
  {
    "name": "getRenderFlags"
  },
  {
    "name": "getRenderParent"
  },
  {
    "name": "getRenderer"
  },
  {
    "name": "getRendererFactory"
  },
  {
    "name": "getRootContext"
  },
  {
    "name": "getRootView"
  },
  {
    "name": "getSymbolIterator$1"
  },
  {
    "name": "getTNode"
  },
  {
    "name": "getTView"
  },
  {
    "name": "getTViewCleanup"
  },
  {
    "name": "getViewData"
  },
  {
    "name": "hasDeps"
  },
  {
    "name": "hasOnDestroy"
  },
  {
    "name": "hasParentInjector"
  },
  {
    "name": "hostReportError"
  },
  {
    "name": "identity"
  },
  {
    "name": "includeViewProviders"
  },
  {
    "name": "initDomAdapter"
  },
  {
    "name": "initNodeFlags"
  },
  {
    "name": "inject"
  },
  {
    "name": "injectArgs"
  },
  {
    "name": "injectElementRef"
  },
  {
    "name": "injectInjector"
  },
  {
    "name": "injectInjectorOnly"
  },
  {
    "name": "injectRootLimpMode"
  },
  {
    "name": "injectableDefFactory"
  },
  {
    "name": "insertBloom"
  },
  {
    "name": "instantiateRootComponent"
  },
  {
    "name": "invertObject"
  },
  {
    "name": "isArray"
  },
  {
    "name": "isArrayLike"
  },
  {
    "name": "isComponent"
  },
  {
    "name": "isComponentDef"
  },
  {
    "name": "isDevMode"
  },
  {
    "name": "isExistingProvider"
  },
  {
    "name": "isFactory"
  },
  {
    "name": "isFactoryProvider"
  },
  {
    "name": "isFunction"
  },
  {
    "name": "isInteropObservable"
  },
  {
    "name": "isIterable"
  },
  {
    "name": "isLContainer"
  },
  {
    "name": "isObject"
  },
  {
    "name": "isProceduralRenderer"
  },
  {
    "name": "isPromise"
  },
  {
    "name": "isPromise$1"
  },
  {
    "name": "isRootView"
  },
  {
    "name": "isScheduler"
  },
  {
    "name": "isTypeProvider"
  },
  {
    "name": "isValueProvider"
  },
  {
    "name": "iterator"
  },
  {
    "name": "leave"
  },
  {
    "name": "leaveView"
  },
  {
    "name": "locateHostElement"
  },
  {
    "name": "makeMetadataCtor"
  },
  {
    "name": "makeParamDecorator"
  },
  {
    "name": "makeRecord"
  },
  {
    "name": "map"
  },
  {
    "name": "markViewDirty"
  },
  {
    "name": "merge$1"
  },
  {
    "name": "mergeAll"
  },
  {
    "name": "mergeMap"
  },
  {
    "name": "multiProviderMixError"
  },
  {
    "name": "multicast"
  },
  {
    "name": "namespaceHTML"
  },
  {
    "name": "nativeInsertBefore"
  },
  {
    "name": "nativeParentNode"
  },
  {
    "name": "nextNgElementId"
  },
  {
    "name": "noComponentFactoryError"
  },
  {
    "name": "noSideEffects"
  },
  {
    "name": "noop"
  },
  {
    "name": "noop$1"
  },
  {
    "name": "noop$2"
  },
  {
    "name": "noopScope"
  },
  {
    "name": "observable"
  },
  {
    "name": "onChangesWrapper"
  },
  {
    "name": "onEnter"
  },
  {
    "name": "onLeave"
  },
  {
    "name": "optionsReducer"
  },
  {
    "name": "parseCookieValue"
  },
  {
    "name": "pipeFromArray"
  },
  {
    "name": "platformBrowser"
  },
  {
    "name": "platformCore"
  },
  {
    "name": "postProcessBaseDirective"
  },
  {
    "name": "prefillHostVars"
  },
  {
    "name": "projectionNodeStack"
  },
  {
    "name": "promise"
  },
  {
    "name": "providerToFactory"
  },
  {
    "name": "providerToRecord"
  },
  {
    "name": "queueComponentIndexForCheck"
  },
  {
    "name": "queueContentHooks"
  },
  {
    "name": "queueDestroyHooks"
  },
  {
    "name": "queueHostBindingForCheck"
  },
  {
    "name": "queueInitHooks"
  },
  {
    "name": "queueLifecycleHooks"
  },
  {
    "name": "queueViewHooks"
  },
  {
    "name": "readElementValue"
  },
  {
    "name": "readPatchedData"
  },
  {
    "name": "readPatchedLViewData"
  },
  {
    "name": "recursivelyProcessProviders"
  },
  {
    "name": "refCount"
  },
  {
    "name": "refreshChildComponents"
  },
  {
    "name": "refreshContentQueries"
  },
  {
    "name": "refreshDescendantViews"
  },
  {
    "name": "refreshDynamicEmbeddedViews"
  },
  {
    "name": "relativePath"
  },
  {
    "name": "remove"
  },
  {
    "name": "removeListeners"
  },
  {
    "name": "renderComponentOrTemplate"
  },
  {
    "name": "renderEmbeddedTemplate"
  },
  {
    "name": "resetComponentState"
  },
  {
    "name": "resolveForwardRef"
  },
  {
    "name": "resolveProvider"
  },
  {
    "name": "resolveToken"
  },
  {
    "name": "rxSubscriber"
  },
  {
    "name": "scheduleMicroTask"
  },
  {
    "name": "scheduleTick"
  },
  {
    "name": "searchTokensOnInjector"
  },
  {
    "name": "setBindingRoot"
  },
  {
    "name": "setCheckNoChangesMode"
  },
  {
    "name": "setCurrentInjector"
  },
  {
    "name": "setFirstTemplatePass"
  },
  {
    "name": "setHostBindings"
  },
  {
    "name": "setIncludeViewProviders"
  },
  {
    "name": "setInjectImplementation"
  },
  {
    "name": "setIsParent"
  },
  {
    "name": "setPreviousOrParentTNode"
  },
  {
    "name": "setRendererFactory"
  },
  {
    "name": "setRootDomAdapter"
  },
  {
    "name": "setTNodeAndViewData"
  },
  {
    "name": "setTestabilityGetter"
  },
  {
    "name": "setUpAttributes"
  },
  {
    "name": "share"
  },
  {
    "name": "shareSubjectFactory"
  },
  {
    "name": "shouldSearchParent"
  },
  {
    "name": "staticError"
  },
  {
    "name": "storeCleanupFn"
  },
  {
    "name": "stringify"
  },
  {
    "name": "stringify$1"
  },
  {
    "name": "subscribeTo"
  },
  {
    "name": "subscribeToArray"
  },
  {
    "name": "subscribeToIterable"
  },
  {
    "name": "subscribeToObservable"
  },
  {
    "name": "subscribeToPromise"
  },
  {
    "name": "subscribeToResult"
  },
  {
    "name": "supportsState"
  },
  {
    "name": "syncViewWithBlueprint"
  },
  {
    "name": "text"
  },
  {
    "name": "tickRootContext"
  },
  {
    "name": "toRefArray"
  },
  {
    "name": "toSubscriber"
  },
  {
    "name": "tryCatch"
  },
  {
    "name": "tryCatcher"
  },
  {
    "name": "tryResolveToken"
  },
  {
    "name": "updateViewQuery"
  },
  {
    "name": "viewAttached"
  },
  {
    "name": "walkTNodeTree"
  },
  {
    "name": "wtfCreateScope"
  },
  {
    "name": "wtfEnabled"
  },
  {
    "name": "wtfLeave"
  }
]